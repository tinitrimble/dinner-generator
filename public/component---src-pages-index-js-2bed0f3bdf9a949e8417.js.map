{"version":3,"sources":["webpack:///./src/templates/RestaurantCard.js","webpack:///./src/layouts/Header.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/layouts/Footer.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["RestaurantCard","_ref","location","sampleItems","notables","react_default","a","createElement","Container","Card","Location","Restinfo","Restitems","Restnotes","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","Header","Link","to","className","Header_templateObject","loader","enqueue","React","createContext","Footer","Footer_templateObject","DinnerGenerator","restaurants","data","allDataJson","edges","node","allrests","length","randomrest","Math","floor","random","layouts_Header","templates_RestaurantCard","sampleitems","layouts_Footer","pages_templateObject","query","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"+zBAIA,IAAMA,EAAiB,SAAjBA,EAAiBC,GAAyC,IAAtCC,EAAsCD,EAAtCC,SAAUC,EAA4BF,EAA5BE,YAAaC,EAAeH,EAAfG,SAC/C,OACEC,EAAAC,EAAAC,cAACP,EAAeQ,UAAhB,KACEH,EAAAC,EAAAC,cAACP,EAAeS,KAAhB,KACEJ,EAAAC,EAAAC,cAACP,EAAeU,SAAhB,KAA0BR,GAC1BG,EAAAC,EAAAC,cAACP,EAAeW,SAAhB,KACEN,EAAAC,EAAAC,cAACP,EAAeY,UAAhB,qBAAwCT,GACxCE,EAAAC,EAAAC,cAACP,EAAea,UAAhB,eAAkCT,OAO5CJ,EAAeQ,UAAYM,IAAOC,IAAlCC,KAOAhB,EAAeS,KAAOK,IAAOC,IAA7BE,KAKAjB,EAAeU,SAAWI,IAAOC,IAAjCG,KAIAlB,EAAeW,SAAWG,IAAOC,IAAjCI,KAQAnB,EAAeY,UAAYE,IAAOC,IAAlCK,KAIApB,EAAea,UAAYC,IAAOC,IAAlCM,KAUerB,kPCpDf,IAAMsB,EAAS,SAATA,IAAS,OACbjB,EAAAC,EAAAC,cAACe,EAAOC,KAAR,CAAaC,GAAG,IAAIC,UAAU,aAA9B,yBAKFH,EAAOC,KAAOT,YAAOS,IAAPT,CAAdY,KAQeJ,oBCJUK,QAAOC,QAELC,IAAMC,cAAc,kOCZ/C,IAAMC,EAAS,SAATA,IAAS,OACX1B,EAAAC,EAAAC,cAACwB,EAAOR,KAAR,CAAaC,GAAG,IAAIC,UAAU,aAA9B,kCAKJM,EAAOR,KAAOT,YAAOS,IAAPT,CAAdkB,KAQeD,uSCXf,IAAME,EAAkB,SAAlBA,EAAkBhC,GAAc,IAC9BiC,EAD8BjC,EAAXkC,KACAC,YAAYC,MAAM,GAAGC,KAAKJ,YAC7CK,EAAWL,EAAYM,OACvBC,EAAaP,EAAYQ,KAAKC,MAAMD,KAAKE,SAASL,IACxD,OACElC,EAAAC,EAAAC,cAAC0B,EAAgBzB,UAAjB,KACEH,EAAAC,EAAAC,cAACsC,EAAD,MACAxC,EAAAC,EAAAC,cAACuC,EAAD,CACE5C,SAAUuC,EAAWvC,SACrBC,YAAasC,EAAWM,YACxB3C,SAAUqC,EAAWrC,WACvBC,EAAAC,EAAAC,cAACyC,EAAD,QAKNf,EAAgBzB,UAAYM,IAAOC,IAAnCkC,KAWO,IAAMC,EAAK,YAgBHjB,iCClDf,IAAsBkB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,8ECsBhCK,UAjBU,SAAAvD,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUuD,EAAoBxD,EAApBwD,cACpC,OAAKA,EAGE5B,IAAMtB,cAAcmD,IAApBC,OAAAC,OAAA,CACL1D,WACAuD,iBACGA,EAAcI,OALV","file":"component---src-pages-index-js-2bed0f3bdf9a949e8417.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from 'styled-components'\n\nconst RestaurantCard = ({ location, sampleItems, notables }) => {\n  return (\n    <RestaurantCard.Container>\n      <RestaurantCard.Card>\n        <RestaurantCard.Location>{location}</RestaurantCard.Location>\n        <RestaurantCard.Restinfo>\n          <RestaurantCard.Restitems>What to eat: {sampleItems}</RestaurantCard.Restitems>\n          <RestaurantCard.Restnotes>Notes: {notables}</RestaurantCard.Restnotes>\n        </RestaurantCard.Restinfo>\n      </RestaurantCard.Card>\n    </RestaurantCard.Container>\n  )\n}\n\nRestaurantCard.Container = styled.div`\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nRestaurantCard.Card = styled.div`\n  max-width: 400px;\n  width: 100%;\n`;\n\nRestaurantCard.Location = styled.div`\n  font-size: 48px;\n`;\n\nRestaurantCard.Restinfo = styled.div`\n  padding: 25px;\n  display: flex;\n  flex-direction: column;\n  justify-content: left;\n  color: #698587;\n`;\n\nRestaurantCard.Restitems = styled.div`\n  padding: 10px;\n`;\n\nRestaurantCard.Restnotes = styled.div`\n  padding: 10px;\n`;\n\nRestaurantCard.propTypes = {\n  location: PropTypes.string.isRequired,\n  sampleItems: PropTypes.string.isRequired,\n  notables: PropTypes.string.isRequired,\n}\n\nexport default RestaurantCard\n","import React from \"react\"\nimport Link from \"gatsby-link\"\nimport styled from \"styled-components\"\n\nconst Header = () => (\n  <Header.Link to=\"/\" className=\"page-name\">\n    Where Should We Eat?\n  </Header.Link>\n)\n\nHeader.Link = styled(Link)`\n  padding: 20px;\n  text-decoration: none;\n  font-size: 22px;\n  color: #698587;\n  font-family: Verdana;\n`\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react'\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nconst Footer = () => (\n    <Footer.Link to=\"/\" className=\"page-name\">\n        I don't want this. Try again.\n    </Footer.Link>\n)\n\nFooter.Link = styled(Link)`\n  background-color: #81a3a6;\n  padding: 20px;\n  text-decoration: none;\n  font-size: 20px;\n  color: #edf9fa;\n`;\n\nexport default Footer;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Restaurantcard from '../templates/RestaurantCard.js' \nimport Header from '../layouts/Header.js'\nimport Footer from '../layouts/Footer.js'\nimport styled from 'styled-components'\n\nconst DinnerGenerator = ({ data }) => {\n  const restaurants = data.allDataJson.edges[0].node.restaurants;\n  const allrests = restaurants.length;\n  const randomrest = restaurants[Math.floor(Math.random()*allrests)];\n  return (\n    <DinnerGenerator.Container>\n      <Header />\n      <Restaurantcard \n        location={randomrest.location}\n        sampleItems={randomrest.sampleitems}\n        notables={randomrest.notables} />\n      <Footer />\n    </DinnerGenerator.Container>\n  )\n}\n\nDinnerGenerator.Container = styled.div`\n  position: absolute; \n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n\nexport const query = graphql`\n  query GetRestaurantQuery {\n    allDataJson {\n      edges {\n        node {\n         restaurants {\n           location\n           sampleitems\n           notables\n         }\n       }\n     }\n   }\n }\n`\n\nexport default DinnerGenerator\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}